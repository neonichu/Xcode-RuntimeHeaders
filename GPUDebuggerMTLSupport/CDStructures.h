//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class NSDictionary, NSMutableSet;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Argument {
    void *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned short _field5;
    unsigned short _field6;
};

struct BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BindingPoint<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BindingPoint<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BindingPoint<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    unsigned long long _objectID;
};

struct BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
};

struct Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPurgeableState;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mResourceOptions;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mData;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mLength;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedTextureIDs;
};

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mStrongReferences;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mProfilingEnabled;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedRenderCommandEncoderIDs;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedBlitCommandEncoderIDs;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedComputeCommandEncoderIDs;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedParallelRenderCommandEncoderIDs;
};

struct CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mExecutionEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mSkipRender;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mProfilingEnabled;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mMaxCommandBufferCount;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedCommandBufferIDs;
};

struct ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mComputePipelineState;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mBuffer[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBufferOffset[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mBytes[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBytesLength[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mTexture[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mSampler[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mThreadgroupMemoryLength[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mSamplerLodMinClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mSamplerLodMaxClamp[32];
    struct bitset<32> _samplerLODMinMaxBitSet;
};

struct ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mError;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFunction;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mThreadExecutionWidth;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mMaxTotalThreadsPerThreadgroup;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mThreadGroupSizeIsMultipleOfThreadExecutionWidth;
    struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _argumentTypeToArgumentsMap;
};

struct CoreFunction {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    union {
        unsigned long long _field1;
        unsigned long long _field2;
    } _field5;
    struct Argument _field6;
    struct Argument _field7[16];
    unsigned int _field8;
    unsigned int _field9;
    void *_field10;
    void *_field11;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> {
    struct BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> {
    struct StateBool mStateVal;
};

struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> {
    struct StateEnum mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::SM::MTL::StateBaseDefault> {
    struct VecN<double, 4> mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::SM::MTL::StateBaseDefault> {
    VecN_24296b45 mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<float, 6>, GPUTools::SM::MTL::StateBaseDefault> {
    VecN_8f1bdb46 mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<unsigned long long, 4>, GPUTools::SM::MTL::StateBaseDefault> {
    VecN_d22ea5a0 mStateVal;
};

struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> {
    float mStateVal;
};

struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> {
    long long mStateVal;
};

struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> mStateVal;
};

struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> {
    unsigned int mStateVal;
};

struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> {
    unsigned long long mStateVal;
};

struct DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthCompareFunction;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mDepthWriteEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontStencilCompareFunction;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontStencilFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontDepthFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontDepthStencilPassOperation;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mFrontReadMask;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mFrontWriteMask;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackStencilCompareFunction;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackStencilFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackDepthFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackDepthStencilPassOperation;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBackReadMask;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBackWriteMask;
};

struct Device<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct ObjectTrackingMap<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _commandQueueMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _bufferMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _textureMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _samplerMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _depthStencilStateMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _libraryMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _renderPipelineStateMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _computePipelineStateMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _commandBufferMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _blitCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _renderCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _computeCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _parallelRenderCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _functionMap;
    unsigned long long _deviceID;
    StateMirrorManager_4613010e *_manager;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedReceiverSet;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mName;
};

struct Function {
    struct CoreFunction _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
    unsigned short _field5;
    unsigned short _field6;
    int _field7;
    void *_field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    struct Function *_field13;
    void *_field14;
};

struct Function<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mName;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mLibraryID;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mFunctionType;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mFilePath;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mLineNumber;
};

struct GPUMTLBindPoint {
    unsigned long long _field1;
    unsigned int _field2;
    unsigned int _field3;
    int _field4;
    unsigned long long _field5;
};

struct GPUMTLBlendChannelSetup {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct GPUMTLStencilSideSetup {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
};

struct Library<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mFastMathEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mDebuggingEnabled;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mDenormsEnabled;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mNativeDoubleEnabled;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mCubemapArrayEnabled;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mLanguageVersion;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedFunctionIDs;
    _Bool _onlineCompiled;
    _Bool _defaultLibrary;
    NSMutableSet *_sourceURLs;
    NSDictionary *_preprocessorMacros;
    _Bool _optionsExist;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedRenderCommandEncoderIDs;
    RenderPassDescriptor_5fd82e83 _renderPassDescriptor;
};

struct PassthroughBase {
    struct function<void *(const char *, unsigned long *)> LoadURLData;
};

struct RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mRenderPipelineState;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexBuffer[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mVertexBufferOffset[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mVertexBytes[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mVertexBytesLength[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexTexture[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBuffer[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBufferOffset[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBytes[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBytesLength[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentTexture[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexSampler[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentSampler[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mVertexSamplerLodMinClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mVertexSamplerLodMaxClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mFragmentSamplerLodMinClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mFragmentSamplerLodMaxClamp[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::VecN<float, 6>, GPUTools::SM::MTL::StateBaseDefault> _mViewport;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontFacingWinding;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mCullMode;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mDepthBias;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mDepthSlopeScale;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mDepthClamp;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthClipMode;
    struct DYStateElement<GPUTools::SM::VecN<unsigned long long, 4>, GPUTools::SM::MTL::StateBaseDefault> _mScissorRect;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mTriangleFillMode;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::SM::MTL::StateBaseDefault> _mBlendColor;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mDepthStencilState;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mStencilFrontReferenceValue;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mStencilBackReferenceValue;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mVisibilityResultMode;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mVisibilityResultOffset;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    _Bool _isCreatedByCommandBuffer;
    _Bool _isCreatedByParallelRenderCommandEncoder;
    _Bool _isFragmentRenderCommandEncoder;
    struct bitset<32> _vertexSamplerLODMinMaxBitSet;
    struct bitset<32> _fragmentSamplerLODMinMaxBitSet;
    RenderPassDescriptor_5fd82e83 _renderPassDescriptor;
};

struct RenderPassAttachmentDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mTexture;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mLevel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSlice;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mDepthPlane;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mResolveTexture;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mResolveLevel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mResolveSlice;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mResolveDepthPlane;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mLoadAction;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mStoreAction;
    struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::SM::MTL::StateBaseDefault> _mClearValue;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthResolveFilter;
};

struct RenderPassDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mWidth;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mHeight;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRenderTargetArrayLength;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVisibilityResultBuffer;
    RenderPassAttachmentDescriptor_8c91cb7e _attachments[10];
};

struct RenderPipelineAttachmentDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPixelFormat;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mBlendingEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mSourceRGBBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDestinationRGBBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mRGBBlendOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mSourceAlphaBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDestinationAlphaBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mAlphaBlendOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mWriteMask;
};

struct RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexFunction;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentFunction;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSampleCount;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSampleMask;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mSampleCoverage;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mAlphaToCoverageEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mAlphaToOneEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mRasterizationEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthAttachmentPixelFormat;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mStencilAttachmentPixelFormat;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mError;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mInputPrimitiveTopology;
    RenderPipelineAttachmentDescriptor_08890bb5 _renderPipelineAttachmentDescriptors[8];
    VertexDescriptor_e5d3aa79 _vertexDescriptor;
    struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _vertexArgumentTypeToArgumentsMap;
    struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _fragmentArgumentTypeToArgumentsMap;
};

struct ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes>;

struct Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mMinFilter;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mMagFilter;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mMipFilter;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mMaxAnisotropy;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mSAddressMode;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mTAddressMode;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mRAddressMode;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mNormalizedCoordinates;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mLodMinClamp;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mLodMaxClamp;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mLodAverage;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mCompareFunction;
};

struct StateBool {
    int _stateEnum;
};

struct StateEnum {
    long long _stateEnum;
};

struct StateMirrorManager<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct unordered_map<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _deviceMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _layerMap;
    unsigned long long _surfaceBoundsLayerID;
    struct PassthroughBase _passthrough;
    int _lastFunctionIndex;
};

struct Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPurgeableState;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mUsage;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mType;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPixelFormat;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSampleCount;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mArrayLength;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mIsDrawable;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mIsFramebufferOnly;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mMipmapLevelCount;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mRotation;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mIOSurfaceRef;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mIOSurfacePlane;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mStorageMode;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mCPUCacheMode;
    struct vector<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _textureSlices;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedTextureIDs;
    _Bool _isTextureView;
    _Bool _isBufferBacked;
};

struct TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>;

struct VecN<double, 4> {
    double mData[4];
};

struct VecN<float, 4> {
    float mData[4];
};

struct VecN<float, 6> {
    float mData[6];
};

struct VecN<unsigned long long, 4> {
    unsigned long long mData[4];
};

struct VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field1;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field2;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field3;
};

struct VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field1;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field2;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field3;
};

struct VertexDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct vector<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _vertexBuffers;
    struct vector<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _vertexAttributes;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>;

struct __hash_node<unsigned long long, void *>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct bitset<32> {
    unsigned long long __first_;
};

struct deque<unsigned int, std::__1::allocator<unsigned int>> {
    struct __split_buffer<unsigned int *, std::__1::allocator<unsigned int *>> {
        unsigned int **__first_;
        unsigned int **__begin_;
        unsigned int **__end_;
        struct __compressed_pair<unsigned int **, std::__1::allocator<unsigned int *>> {
            unsigned int **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned int>> {
        unsigned long long __first_;
    } __size_;
};

struct function<void *(const char *, unsigned long *)> {
    struct type __buf_;
    struct __base<void *(const char *, unsigned long *)> *__f_;
};

struct shared_ptr<GPUTools::FD::Function> {
    struct Function *_field1;
    struct __shared_weak_count *_field2;
};

struct stack<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>> {
    struct deque<unsigned int, std::__1::allocator<unsigned int>> c;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<GPUTools::MTL::ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::MTL::ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
    struct __compressed_pair<GPUTools::MTL::ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, std::__1::default_delete<GPUTools::MTL::ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
        struct ResourceManager<GPUTools::SM::MTL::DefaultBaseObjectTypes> *__first_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> {
        struct __hash_node<unsigned long long, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<unsigned long long, GPUMTLBindPoint, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUMTLBindPoint>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *>*>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *>*> {
                struct __hash_node<unsigned long long, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<unsigned long long>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
    struct TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes> *__begin_;
    struct TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes> *__end_;
    struct __compressed_pair<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, std::__1::allocator<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
        struct TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes> *__first_;
    } __end_cap_;
};

struct vector<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
    VertexAttribute_ebed2729 *__begin_;
    VertexAttribute_ebed2729 *__end_;
    struct __compressed_pair<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, std::__1::allocator<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
        VertexAttribute_ebed2729 *__first_;
    } __end_cap_;
};

struct vector<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
    VertexBuffer_34433e31 *__begin_;
    VertexBuffer_34433e31 *__end_;
    struct __compressed_pair<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, std::__1::allocator<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
        VertexBuffer_34433e31 *__first_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
} BlitCommandEncoder_0e8e1979;

typedef struct Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPurgeableState;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mResourceOptions;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mData;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mLength;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedTextureIDs;
} Buffer_e8b67ba7;

typedef struct CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mStrongReferences;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mProfilingEnabled;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedRenderCommandEncoderIDs;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedBlitCommandEncoderIDs;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedComputeCommandEncoderIDs;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedParallelRenderCommandEncoderIDs;
} CommandBuffer_b8d892ad;

typedef struct CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mExecutionEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mSkipRender;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mProfilingEnabled;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mMaxCommandBufferCount;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedCommandBufferIDs;
} CommandQueue_f95f9d2e;

typedef struct ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mComputePipelineState;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mBuffer[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBufferOffset[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mBytes[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBytesLength[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mTexture[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mSampler[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mThreadgroupMemoryLength[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mSamplerLodMinClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mSamplerLodMaxClamp[32];
    struct bitset<32> _samplerLODMinMaxBitSet;
} ComputeCommandEncoder_926cb968;

typedef struct ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mError;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFunction;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mThreadExecutionWidth;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mMaxTotalThreadsPerThreadgroup;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mThreadGroupSizeIsMultipleOfThreadExecutionWidth;
    struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _argumentTypeToArgumentsMap;
} ComputePipelineState_82a05cab;

typedef struct DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthCompareFunction;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mDepthWriteEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontStencilCompareFunction;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontStencilFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontDepthFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontDepthStencilPassOperation;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mFrontReadMask;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mFrontWriteMask;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackStencilCompareFunction;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackStencilFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackDepthFailureOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mBackDepthStencilPassOperation;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBackReadMask;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mBackWriteMask;
} DepthStencilState_d26ffc7c;

typedef struct Device<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct ObjectTrackingMap<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _commandQueueMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _bufferMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _textureMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _samplerMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _depthStencilStateMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _libraryMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _renderPipelineStateMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _computePipelineStateMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _commandBufferMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _blitCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _renderCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _computeCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _parallelRenderCommandEncoderMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _functionMap;
    unsigned long long _deviceID;
    StateMirrorManager_4613010e *_manager;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedReceiverSet;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mName;
} Device_5cef99fc;

typedef struct Function<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mName;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mLibraryID;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mFunctionType;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mFilePath;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mLineNumber;
} Function_130258c1;

typedef struct Library<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mFastMathEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mDebuggingEnabled;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mDenormsEnabled;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mNativeDoubleEnabled;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mCubemapArrayEnabled;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mLanguageVersion;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedFunctionIDs;
    _Bool _onlineCompiled;
    _Bool _defaultLibrary;
    NSMutableSet *_sourceURLs;
    NSDictionary *_preprocessorMacros;
    _Bool _optionsExist;
} Library_fcf3a16e;

typedef struct ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedRenderCommandEncoderIDs;
    RenderPassDescriptor_5fd82e83 _renderPassDescriptor;
} ParallelRenderCommandEncoder_874a9a1a;

typedef struct RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mRenderPipelineState;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexBuffer[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mVertexBufferOffset[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mVertexBytes[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mVertexBytesLength[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexTexture[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBuffer[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBufferOffset[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBytes[32];
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mFragmentBytesLength[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentTexture[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexSampler[32];
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentSampler[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mVertexSamplerLodMinClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mVertexSamplerLodMaxClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mFragmentSamplerLodMinClamp[32];
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mFragmentSamplerLodMaxClamp[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::VecN<float, 6>, GPUTools::SM::MTL::StateBaseDefault> _mViewport;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mFrontFacingWinding;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mCullMode;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mDepthBias;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mDepthSlopeScale;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mDepthClamp;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthClipMode;
    struct DYStateElement<GPUTools::SM::VecN<unsigned long long, 4>, GPUTools::SM::MTL::StateBaseDefault> _mScissorRect;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mTriangleFillMode;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::SM::MTL::StateBaseDefault> _mBlendColor;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mDepthStencilState;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mStencilFrontReferenceValue;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mStencilBackReferenceValue;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mVisibilityResultMode;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mVisibilityResultOffset;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mEncodingEnded;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    _Bool _isCreatedByCommandBuffer;
    _Bool _isCreatedByParallelRenderCommandEncoder;
    _Bool _isFragmentRenderCommandEncoder;
    struct bitset<32> _vertexSamplerLODMinMaxBitSet;
    struct bitset<32> _fragmentSamplerLODMinMaxBitSet;
    RenderPassDescriptor_5fd82e83 _renderPassDescriptor;
} RenderCommandEncoder_516b45a3;

typedef struct RenderPassAttachmentDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mTexture;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mLevel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSlice;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mDepthPlane;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mResolveTexture;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mResolveLevel;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mResolveSlice;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mResolveDepthPlane;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mLoadAction;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mStoreAction;
    struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::SM::MTL::StateBaseDefault> _mClearValue;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthResolveFilter;
} RenderPassAttachmentDescriptor_8c91cb7e;

typedef struct RenderPassDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mWidth;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mHeight;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRenderTargetArrayLength;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVisibilityResultBuffer;
    RenderPassAttachmentDescriptor_8c91cb7e _attachments[10];
} RenderPassDescriptor_5fd82e83;

typedef struct RenderPipelineAttachmentDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPixelFormat;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mBlendingEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mSourceRGBBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDestinationRGBBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mRGBBlendOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mSourceAlphaBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDestinationAlphaBlendFactor;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mAlphaBlendOperation;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mWriteMask;
} RenderPipelineAttachmentDescriptor_08890bb5;

typedef struct RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mVertexFunction;
    struct DYStateElement<GPUTools::SM::MTL::BindingPoint<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long>, GPUTools::SM::MTL::StateBaseDefault> _mFragmentFunction;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSampleCount;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSampleMask;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mSampleCoverage;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mAlphaToCoverageEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mAlphaToOneEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mRasterizationEnabled;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mDepthAttachmentPixelFormat;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mStencilAttachmentPixelFormat;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mError;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mInputPrimitiveTopology;
    RenderPipelineAttachmentDescriptor_08890bb5 _renderPipelineAttachmentDescriptors[8];
    VertexDescriptor_e5d3aa79 _vertexDescriptor;
    struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _vertexArgumentTypeToArgumentsMap;
    struct unordered_map<unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::Argument<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _fragmentArgumentTypeToArgumentsMap;
} RenderPipelineState_2531dade;

typedef struct Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mMinFilter;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mMagFilter;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mMipFilter;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mMaxAnisotropy;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mSAddressMode;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mTAddressMode;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mRAddressMode;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mNormalizedCoordinates;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mLodMinClamp;
    struct DYStateElement<float, GPUTools::SM::MTL::StateBaseDefault> _mLodMaxClamp;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<unsigned int, GPUTools::SM::MTL::StateBaseDefault> _mLodAverage;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mCompareFunction;
} Sampler_4521416c;

typedef struct StateMirrorManager<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct unordered_map<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _deviceMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _layerMap;
    unsigned long long _surfaceBoundsLayerID;
    struct PassthroughBase _passthrough;
    int _lastFunctionIndex;
} StateMirrorManager_4613010e;

typedef struct Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _objectID;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPurgeableState;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mUsage;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _mLabel;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mType;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mPixelFormat;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mSampleCount;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mArrayLength;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mIsDrawable;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _mIsFramebufferOnly;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _mMipmapLevelCount;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mRotation;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mIOSurfaceRef;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mIOSurfacePlane;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _mRootResource;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mStorageMode;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _mCPUCacheMode;
    struct vector<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _textureSlices;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _ownedTextureIDs;
    _Bool _isTextureView;
    _Bool _isBufferBacked;
} Texture_f24102c5;

typedef struct VecN<float, 4> {
    float mData[4];
} VecN_24296b45;

typedef struct VecN<float, 6> {
    float mData[6];
} VecN_8f1bdb46;

typedef struct VecN<unsigned long long, 4> {
    unsigned long long mData[4];
} VecN_d22ea5a0;

typedef struct VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field1;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field2;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field3;
} VertexAttribute_ebed2729;

typedef struct VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field1;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field2;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field3;
} VertexBuffer_34433e31;

typedef struct VertexDescriptor<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct vector<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::VertexBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _vertexBuffers;
    struct vector<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::VertexAttribute<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _vertexAttributes;
} VertexDescriptor_e5d3aa79;

typedef struct shared_ptr<GPUTools::FD::Function> {
    struct Function *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_e8134367;

typedef struct unordered_map<unsigned long long, GPUMTLBindPoint, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUMTLBindPoint>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUMTLBindPoint>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_75cc7d9b;

